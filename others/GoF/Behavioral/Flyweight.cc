/****************************************************************************
 *享元模式：运用共享技术有效的支持大量细粒度的对象。
 *（1）如果一个应用程序使用了大量的对象，而这些对象造成了很大的存储开销时就
 *     应该考虑使用享元模式；还有就是对象的大多数状态可以是外部状态，如果删
 *     除对象的外部状态，那么可以用相对较少的共享对象取代很多组对象，此时可
 *     以考虑使用享元模式。
 *（2）要清楚有共享的部分，应该也有不共享的部分；为了统一接口可以用一个工厂
 *     来做，当发现请求的是一个共享的对象的时候，返回共享对象，如果是非共享
 *     对象，则创建一个非共享对象的实例。
 *（3）其实享元模式更倾向于是创建型的设计模式。
 *
 * **************************************************************************
 */
